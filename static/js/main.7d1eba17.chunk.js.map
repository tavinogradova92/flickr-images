{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Footer.js","components/ErrorBoundry.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","title","url","id","className","alt","src","CardList","photos_arr","map","user","i","key","farm","server","secret","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","children","Footer","class","href","viewBox","style","fill","d","fill-rule","data-icon","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","photographs","fetch","then","response","json","console","log","hasOwnProperty","photos","photo","filteredPhotos","filter","toLowerCase","includes","length","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7d1eba17.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({title, id, url }) => {\r\n    return (\r\n        <div className='column dib ma2 grow shadow-5'>\r\n            <img\r\n                alt={title}  \r\n                src={url}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ photos_arr }) => {\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    photos_arr.map((user, i) => {\r\n                        return (\r\n                            <Card \r\n                                key={i}\r\n                                url={`https://farm${photos_arr[i].farm}.staticflickr.com/${photos_arr[i].server}/${photos_arr[i].id}_${photos_arr[i].secret}.jpg`}\r\n                                title={photos_arr[i].title}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa1'>\r\n            <input \r\n                className='pa2 ba b--grey'\r\n                type='search' \r\n                placeholder='search photos' \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './Scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className='scrollable'>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='pv4 ph3 ph5-ns tc'>\r\n            <a \r\n                class=\"link dim gray dib h2 w2 br-100 mr3\" \r\n                href=\"https://www.linkedin.com/in/tanjavinogradova/\">\r\n                    <svg viewBox=\"0 0 16 16\" style={{fill:'currentcolor'}}>\r\n                        <title>LinkedIn</title>\r\n                        <path d=\"M13.632 13.635h-2.37V9.922c0-.886-.018-2.025-1.234-2.025-1.235 0-1.424.964-1.424 1.96v3.778h-2.37V6H8.51V7.04h.03c.318-.6 1.092-1.233 2.247-1.233 2.4 0 2.845 1.58 2.845 3.637v4.188zM3.558 4.955c-.762 0-1.376-.617-1.376-1.377 0-.758.614-1.375 1.376-1.375.76 0 1.376.617 1.376 1.375 0 .76-.617 1.377-1.376 1.377zm1.188 8.68H2.37V6h2.376v7.635zM14.816 0H1.18C.528 0 0 .516 0 1.153v13.694C0 15.484.528 16 1.18 16h13.635c.652 0 1.185-.516 1.185-1.153V1.153C16 .516 15.467 0 14.815 0z\" fill-rule=\"nonzero\"/>\r\n                    </svg>\r\n            </a>\r\n            <a \r\n                className=\"link dim gray dib br-100 h2 w2 mr3 \" \r\n                href=\"https://github.com/tavinogradova92\">\r\n                    <svg data-icon=\"github\" viewBox=\"0 0 32 32\" style={{fill:'currentcolor'}}>\r\n                        <title>GitHub</title>\r\n                        <path d=\"M0 18 C0 12 3 10 3 9 C2.5 7 2.5 4 3 3 C6 3 9 5 10 6 C12 5 14 5 16 5 C18 5 20 5 22 6 C23 5 26 3 29 3 C29.5 4 29.5 7 29 9 C29 10 32 12 32 18 C32 25 30 30 16 30 C2 30 0 25 0 18 M3 20 C3 24 4 28 16 28 C28 28 29 24 29 20 C29 16 28 14 16 14 C4 14 3 16 3 20 M8 21 A1.5 2.5 0 0 0 13 21 A1.5 2.5 0 0 0 8 21 M24 21 A1.5 2.5 0 0 0 19 21 A1.5 2.5 0 0 0 24 21 z\"></path>\r\n                    </svg>\r\n            </a>\r\n            <div className=\"mt2\">\r\n                <a \r\n                    href=\"https://photovinogradova.com/resume\" \r\n                    className=\"f6 link dim gray dib mr3 mr4-ns\"\r\n                    title=\"Portfolio\">\r\n                    Developed by Tanja Vinogradova\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooooops, something is wrong here</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport Footer from '../components/Footer';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n              photographs: {}\r\n            , searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://www.flickr.com/services/rest/?method=flickr.galleries.getPhotos&api_key=fd480d49ddad70072e137f3b8ad1f8c1&gallery_id=72157713471498036&format=json&nojsoncallback=1')\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then(photographs => {\r\n            this.setState({ photographs: photographs })\r\n        })\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { photographs, searchfield } = this.state;\r\n        console.log('Knock knock!')\r\n        console.log(photographs)\r\n        if (!photographs.hasOwnProperty('photos') ) {\r\n            return <h1>Loading Data...</h1>\r\n        }\r\n\r\n        const photos_arr = photographs.photos.photo;\r\n       \r\n        const filteredPhotos = photos_arr.filter(i => {\r\n            return i.title.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n     \r\n        if (!photos_arr.length) {\r\n            return <h1>Loading...</h1>\r\n        } else {\r\n            console.log('Print filtered')\r\n            console.log(filteredPhotos)\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f3 f2-m f2-l'>Flickr Gallery Imitator</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList photos_arr={filteredPhotos}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                    <Footer/>\r\n                </div>\r\n            );\r\n        }\r\n    } \r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}